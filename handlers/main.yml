---
# handlers file for role-kubeadm-setup

# This turns off swap for the current session
- name: Disable swap
  ansible.builtin.shell: sudo swapoff -a

# This applies the above modules in the current session, saving us the need for a reboot
- name: Apply sysctl params
  ansible.builtin.shell: sudo sysctl --system

# Only needs to be ran if the cgroup driver is changed
- name: Restart containerd
  ansible.builtin.systemd_service:
    state: restarted
    daemon_reload: true
    name: containerd.service

# Having these checks as handlers should help ensure that they are the last tasks to run in the playbook
- name: Check if containerd.service is running
  ansible.builtin.service_facts:
  register: service_state
  notify: Check if kubeadm and kubelet were installed

- name: Check if kubeadm and kubelet were installed
  ansible.builtin.package_facts:
  register: package_state
  notify: Check sysctl.d/k8s.conf

- name: Check sysctl.d/k8s.conf
  ansible.builtin.template:
    src: templates/module_k8s_conf.j2
    dest: /etc/modules-load.d/k8s.conf
    mode: "0644"
  check_mode: true
  register: sysctl
  notify: Check systemd cgroup driver

- name: Check systemd cgroup driver
  ansible.builtin.template:
    src: templates/cgroup.j2
    dest: /etc/containerd/config.toml
    mode: "0644"
  check_mode: true
  register: cgroup
  notify: Evaluating checks

- name: Evaluating checks
  ansible.builtin.assert:
    that:
      - service_state.ansible_facts.services["containerd.service"].state == "running"
      - package_state.ansible_facts.packages["kubelet"] is defined
      - package_state.ansible_facts.packages["kubeadm"] is defined
      - sysctl is not changed
      - cgroup is not changed
    success_msg: "All checks passed"